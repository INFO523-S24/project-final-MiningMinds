---
title: "Fraud Detection using Ensemble Learning"
subtitle: "Proposal"
author: 
  - name: Roxana Akbarsharifi<br>Omid Zandi<br>Deema Albluwi<br>Gowtham Gopalakrishnan<br>Nandhini Anne<br>Sai Navya Reddy Busireddy
    affiliations:
      - name: "School of Information, University of Arizona"
description: "Credit Card Fraud Detection Using Anomaly Detection Techniques"
format:
  html:
    code-tools: true
    code-overflow: wrap
    code-line-numbers: true
    embed-resources: true
editor: visual
code-annotations: hover
execute:
  warning: false
jupyter: python3
---


## High Level Goal

The overarching goal is to evaluate the enhancement in machine learning models’ performance achieved by integrating various models through a novel ensemble method known as stacked generalization. To this end, we will apply the stacked model to a comlex classification problem aimed at detecting fraudulent credit card transactions.

## Project Description and Motivation

Our project is motivated by the goal of accurately identifying fraudulent transactions using ensemble learning approaches (baggin, boosting, and stacking). We plan to use advanced data mining and machine learning techniques to create a model capable of spotting transactions that stand out as potentially fraudulent. A key part of our project involves comparing different machine learning models to see which one performs best on each dataset we study. We're committed to understanding why certain models are more effective in specific situations. This approach will not only help us find the most effective way to detect fraud but also deepen our understanding of how these models work. Through this work, we aim to make a meaningful contribution to both the field of study and the practical efforts to secure financial transactions.

## Dataset

We chose a dataset comprising over 550,000 credit card transactions made by European cardholders in 2023. This dataset is particularly appealing because of its substantial size, the anonymity of its features, and its real-world relevance. It includes 31 features: a unique transaction ID, 28 anonymized attributes (V1-V28) that could encompass various transaction details such as time, location, and merchant category, the transaction amount, and a binary class indicating whether the transaction was fraudulent. The data's anonymization ensures privacy and ethical compliance, while the binary classification makes it suitable for supervised learning approaches in fraud detection.

```{python}
#| label: load-pkgs
#| message: false
import numpy as np
import pandas as pd
```

```{python}
#| label: load-dataset
df = pd.read_csv('./data/creditcard_2023.csv')
df.head()
```

```{python}
#| label: data-overview

# Print the shape of the DataFrame
print("Shape of the DataFrame:", df.shape)


# Print the data types of each column
# print("Data types of the columns:")
# print(df.dtypes)


# Use .info() to get a concise summary of the DataFrame
print("DataFrame Information:")
df.info()
```


## Research Questions

### Research Question 1:
What is the comparative performance of anomaly detection algorithms, including Random Forest, XGBoost, Artificial Neural Networks, for fraud detection in this specific dataset?

### Analysis Plan:

- Split the dataset into training and testing sets and 
Train individual anomaly detection models (Random Forest, XGBoost, Artificial Neural Networks) on the training set.
- Hypertuning the trained models.
- Evaluate the performance of each model on the testing set using metrics such as precision, recall, F1-score, and area under the ROC curve.
- Analyze the reasons behind the performance differences observed, potentially considering factors such as model complexity, feature importance, and dataset characteristics.

### Research Question 2:
How does the stacked generalization technique, implemented with the mlxtend library, improve fraud detection performance by leveraging the synergy between base classifiers?

### Analysis Plan:

- Implement stacked generalization using the mlxtend library with the trained models from previous question.
- Split the base learners output into training and testing sets.
- Combine predictions from base classifiers using the stacking ensemble approach and train a meta-classifier on the combined predictions.
- Evaluate the performance of the stacked model and compare it with the base learners.
- Analyze the reasons behind the performance improvement, considering factors such as model diversity, ensemble learning principles, and the dataset's characteristics.


## Plan of Attack

| Task Name | Assignee | Due | Summary |
|----------|----------|----------|----------|
| Exploratory Data Analysis | Sai & Nandhini | 04/07/2024 | Comparing the statistical distribution of the anonymized features, Exploring the relationship between the amount of transactions and fraudulent transactions |
| Feature Selection and Engineering | Gowtham | 04/09/2024 | Performing PCA and selecting the number of PCAs, Exploring random forest feature importance |
| Training the Base Learners | Deema | 04/14/2024 | Training one machine learning algorithm from each of the ensemble learning approaches (bagging, boosting, and stacking) along with artificial neural networks |
| Hypertuning Base Learners | Roxana | 04/20/2024 | Hypertuning the base learners using grid search or random search |
| Model Evaluation | Sai | 04/24/2024 | Evaluating models using categorical metrics, confusion metrics, and ROC curve |
| Developing Stacked Generalization | Omid | 04/30/2024 | Selecting the metalearner and Testing the potential improvement upon the base learners |
| Preparing the Final Report and Presentation | Nandhini | 04/05/2024 | Finalizing the results and practicing the oral presentation |

## Repo Organization

Project repository comprises of following folders :

- **.github/:** Reserved for GitHub-related files like workflows, actions, and customized templates tailored for issue management.

- **\_extra/:** Acts as a repository for miscellaneous files that don't fit into other project sections, offering flexibility for various supplementary documents.

- **\_freeze/:** Stores frozen environment files detailing the project’s setup and dependencies.

- **data/:** Houses essential data files crucial for project operations, including input files, datasets, and other vital resources.

- **images/:** Serves as a central repository for visual assets such as diagrams, charts, and screenshots essential for project documentation and presentation.

- **.gitignore:** Defines exclusions from version control, streamlining the versioning process.

- **README.md:** Serves as the primary source of project information, encompassing setup instructions, usage guidelines, and an overview of project objectives and scope.

- **\_quarto.yml:** Functions as the configuration file for Quarto, governing the construction and rendering of Quarto documents.

- **about.qmd:** Provides supplementary contextual information about the project's purpose and team members.

- **index.qmd:** Acts as the main hub for the project, offering detailed descriptions including code snippets, visualizations, and outcomes.

- **presentation.qmd:** Serves as a Quarto file for presenting the final project results in slideshow format.

- **project-final.Rproj:** Project file for organization and management within the R environment.

- **proposal.qmd:** Contains the project proposal, encompassing dataset details, metadata, project description, questions, and weekly plan updates.

- **requirements.txt:** Specifies project dependencies and their versions essential for successful execution.

## References
\[1\] The Data source link is attached here: [https://www.kaggle.com/datasets/nelgiriyewithana/credit-card-fraud-detection-dataset-2023](https://www.kaggle.com/datasets/nelgiriyewithana/credit-card-fraud-detection-dataset-2023)

\[2\] Github Link: [https://github.com/INFO523-S24/project-final-MiningMinds](https://github.com/INFO523-S24/project-final-MiningMinds)
